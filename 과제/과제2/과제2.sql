-- 문제 1
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, ENTRANCE_DATE 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY ENTRANCE_DATE ASC;

-- 문제2
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) != 3;

-- 문제 3
SELECT PROFESSOR_NAME AS 교수이름, (119 - SUBSTR(PROFESSOR_SSN, 1,2)) - 1 AS 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = 1
ORDER BY 나이 ASC;

-- 문제 4
SELECT SUBSTR(PROFESSOR_NAME, 2) 이름
FROM TB_PROFESSOR;

-- 문제 5 
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE (119 - SUBSTR(STUDENT_SSN, 1, 2)) - (2019 - EXTRACT(YEAR FROM ENTRANCE_DATE)) > 19; 

-- 문제 6
SELECT TO_CHAR(TO_DATE('2020-12-25'), 'DAY')
FROM DUAL;

-- 문제 7
SELECT TO_CHAR(TO_DATE('99/10/11', 'YY/MM/DD'), 'YYYYMMDD'), TO_CHAR(TO_DATE('49/10/11', 'YY/MM/DD'), 'YYYYMMDD')
FROM DUAL;
SELECT TO_CHAR(TO_DATE('99/10/11', 'RR/MM/DD'), 'RRRRMMDD'), TO_CHAR(TO_DATE('49/10/11', 'RR/MM/DD'), 'RRRRMMDD')
FROM DUAL;

-- 문제 8
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO, 1, 1) != 'A';

-- 문제 9
SELECT ROUND(AVG(POINT), 1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

-- 문제 10 
SELECT DEPARTMENT_NO 학과번호, COUNT(STUDENT_NO) "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

-- 문제 11
SELECT COUNT(*)
FROM TB_STUDENT
GROUP BY COACH_PROFESSOR_NO
HAVING COACH_PROFESSOR_NO IS NULL;

-- 문제 12
SELECT SUBSTR(TERM_NO, 1, 4) AS 년도, ROUND(AVG(POINT), 1) AS "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO, 1, 4)
ORDER BY 1;

-- 문제 13
SELECT DEPARTMENT_NO 학과코드명, COUNT(DECODE(ABSENCE_YN, 'Y', 1)) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

-- 문제 14
SELECT STUDENT_NAME "동일이름", COUNT(*) "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(STUDENT_NAME) >= 2
ORDER BY 1;

-- 문제 15
SELECT NVL(SUBSTR(TERM_NO, 1, 4), ' ') 년도, NVL(SUBSTR(TERM_NO, 5, 2),' ') 학기, ROUND(AVG(POINT), 1) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2))
ORDER BY SUBSTR(TERM_NO, 1, 4) ASC, SUBSTR(TERM_NO, 5, 2) ASC;