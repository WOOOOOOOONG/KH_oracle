-- 1. 연락처가 없는 사원들 중 가장 급여가 적은 사원과 입사년도가 같은 사원들의
-- 사원명, 부서명, 직급명, 보너스포함 연봉을 조회하시오.
-- 만약 부서명이 없다면 '소속없음' 으로 표시하시오.
-- 단, 출력헤더는 "사원명", "부서명", "직급명", "보너스포함 연봉"으로 출력되도록 한다. (장혜림)
/* [출력결과]
정중하	해외영업2부	    부장	    46800000
하동운	소속없음	        대리	    28072000
임시환	회계관리부	    차장	    18600000
*/
SELECT EMP_NAME 사원명, NVL(DEPT_TITLE, '소속없음') 부서명, JOB_NAME 직급명, ROUND((SALARY + NVL(BONUS, 0)) * 12, 0)  "보너스포함 연봉"
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
JOIN JOB USING(JOB_CODE)
WHERE EXTRACT(YEAR FROM HIRE_DATE) = (SELECT EXTRACT(YEAR FROM HIRE_DATE)
                                    FROM EMPLOYEE
                                    WHERE SALARY = (SELECT MIN(SALARY)
                                                    FROM EMPLOYEE
                                                    WHERE PHONE IS NULL))
ORDER BY 4 DESC;                

-- 2. 상(호연)관 서브쿼리를 사용
-- 한국에 근무하는 사원중 관리자 사번이 있는 직원의 사번 ,이름 ,부서명 ,관리자 사번, 연봉 크기 순 , 보너스 
-- 보너스가 없다면 '0' 으로 표시 (김대성)
SELECT EMP_ID 사번, EMP_NAME 이름, DEPT_TITLE 부서명, MANAGER_ID "관리자 사번", ROWNUM "연봉 크기 순서", NVL(BONUS, 0) 보너스
FROM (SELECT EMP_ID, EMP_NAME, DEPT_TITLE, MANAGER_ID, BONUS
        FROM EMPLOYEE
        LEFT JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
        JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
        WHERE MANAGER_ID IS NOT NULL
        AND LOCATION_ID = (SELECT LOCAL_CODE
                            FROM LOCATION
                            WHERE NATIONAL_CODE = 'KO')
        ORDER BY ((SALARY + NVL(BONUS, 0)) * 12) DESC);



-- 3. 전체인원의 월급 평균보다 높은 사원들 중 가장 젊은사람의 이름과 월급, 근무국가 (김지현)
-- 결과 : 대북혼 3760000 일본
SELECT EMP_NAME, SALARY, NATIONAL_NAME
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
RIGHT JOIN LOCATION ON (LOCATION_ID = LOCAL_CODE)
JOIN NATIONAL USING (NATIONAL_CODE)
WHERE EMP_NO = (SELECT MAX(EMP_NO)
                FROM EMPLOYEE
                WHERE SALARY > (SELECT AVG(SALARY)
                FROM EMPLOYEE));

-- 4. 2000년(포함) 이후에 입사한 직원들중 부서가 있는 남자직원들의
-- 부서명 ,지역명 ,사번 , 이름 , 입사일 ,사원 연봉 , 순위 (고태훈)
-- 출력결과
--총무부	ASIA1	201	송종기	01/09/01	72000000	1
--총무부	ASIA1	202	노옹철	01/01/01	44400000	2
--해외영업2부	ASIA3	204	유재식	00/12/29	48960000	3
--해외영업1부	ASIA2	208	김해술	04/04/30	30000000	4
--해외영업1부	ASIA2	209	심봉선	11/11/11	48300000	5
--기술지원부	EU	211	전형돈	12/12/12	24000000	6
--인사관리부	ASIA1	214	방명수	10/04/04	16560000	7
--해외영업1부	ASIA2	215	대북혼	17/06/19	45120000	8
--인사관리부	ASIA1	216	차태연	13/03/01	40032000	9
--회계관리부	ASIA1	220	이중석	14/09/18	29880000	10
SELECT DEPT_TITLE, LOCAL_NAME, EMP_ID, EMP_NAME, HIRE_DATE, SALARY * (1 + NVL(BONUS, 0)) * 12, ROWNUM
FROM EMPLOYEE
LEFT JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
RIGHT JOIN LOCATION ON(LOCATION_ID = LOCAL_CODE)
WHERE EMP_NAME IN (SELECT EMP_NAME
                    FROM EMPLOYEE
                    WHERE EXTRACT(YEAR FROM HIRE_DATE) >= 2000
                    AND DEPT_CODE IS NOT NULL
                    AND SUBSTR(EMP_NO, 8, 1) = '1');


-- *** 실수로 homework 계정으로 만듦 ***
-- 5. WITH, AS, HAVING, GROUP BY, ORDER BY, ROWNUM, DESNE_RANK() 다 사용할것 
-- 학생 주민등록번호 토대로 순위대로 출력 이름, 
--주민등록  주의! 같은 날일 경우에 는 같은 순위에 넣을것!
-- 여자 나이순 
-- GPA 구하기 
-- GPA TO_CHAR 써서 소수점 두자리까지 나오게 할것 
-- GPA 3.5 이상만 나오게하기 (이재찬)


----- 결과물 -----
--김소정	780924-2140110	 3.55	1
--김소라	790514-2101297	 4.00	2
--김수린	790620-2163047	 3.72	3
--조기현	790802-2129153	 4.05	4
--김여주	800425-2162723	 4.00	5
--최진아	800514-2173875	 3.75	6
--김수련	800905-2172567	 3.61	7
--김계영	801211-2148346	 3.70	8
--이기덕	810127-2116780	 3.72	9
--노수미	811201-2115477	 3.60	10
--나영운	820316-2156283	 3.89	11
--방민진	820510-2138836	 3.75	12
--유하미	820514-2172832	 4.13	13
--박하나	820530-2129861	 3.75	14
--최원희	821219-2100966	 3.69	15
--남나리	821222-2127042	 3.61	16
--이대은	821224-2140928	 3.67	17
--윤잔디	830320-2172499	 3.56	18
--유승미	830504-2150605	 4.20	19
--서가람	830530-2124663	 3.72	20
--오두용	830601-2148412	 3.63	21
--윤리나	831124-2171993	 3.50	22
--민보은	840214-2174935	 3.90	23
--박봉진	840324-2113454	 3.50	24
--이성희	840402-2111032	 3.50	25
--박유연	840606-2145610	 3.80	26
--김명희	840720-2107577	 3.95	27
--김은이	840721-2135563	 3.68	28
--안병수	840823-2121826	 3.50	29
--신숙희	840919-2133319	 4.00	30
--이유연	841006-2152735	 3.72	31
--조윤성	841008-2117558	 3.67	32
--양재영	841023-2142337	 3.50	33
--이세라	850119-2152437	 3.50	34
--이세라	850130-2115471	 3.78	35
--박선아	850221-2149159	 3.65	36
--유선주	850310-2151211	 3.61	37
--공혜경	850402-2110097	 3.50	38
--이지나	850419-2131911	 3.67	39
--조미지	850421-2137939	 3.68	40
--한아름	850506-2179659	 3.56	41
--김보람	850514-2168738	 3.50	42
--장미희	850602-2102163	 3.83	43
--박선일	850623-2116230	 3.56	44
--양선주	850703-2121753	 3.94	45
--이은혜	850813-2178245	 3.67	46
--이윤성	850822-2140345	 3.80	47
--최경희	851016-2163388	 3.75	48
--유윤주	851019-2151163	 3.55	49
--권지영	851130-2132592	 3.75	50
--서미림	851201-2154771	 3.50	51
--최세정	860225-2139170	 3.72	52
--김정현	860301-2151581	 3.61	53
--권혜림	860402-2170498	 3.60	54
--김보영	860408-2115571	 3.60	55
--성빛나	860615-2155216	 3.78	56
--이윤선	860814-2108889	 3.71	57
--임지민	860916-2136502	 3.72	58
--김혜영	860930-2143357	 3.65	59
--공지영	861001-2132521	 3.72	60
--황지수	861011-2103945	 4.50	61
--강지영	861014-2147952	 3.78	62
--이지은	861015-2100397	 3.50	63
--이진아	861015-2148519	 3.72	63
--김지아	861102-2103507	 3.73	64
--박현화	861128-2113499	 3.55	65
--이선화	870511-2148515	 3.50	66
--최효정	870715-2119633	 3.50	67
--김혜민	870825-2109982	 3.75	68
--김혜영	870904-2110955	 3.81	69
--박선영	870913-2175604	 3.56	70
--전효선	871030-2176192	 4.30	71   

-- 6. 60년대 직원 중 보너스 포함한 연봉이 높은 3명의
-- 사번, 직원명, 부서명, 직급명, 나이, 순위, 연봉을 나타내시오
-- 단, 나이는 현재 년도 - 태어난 년도 + 1
--> 인라인뷰(김종택)
--<결과>
--순위    사번    직원명  부서            직급    나이    연봉
--------------------------------------------------------------------
--1	200	선동일	총무부		대표	58	124800000
--2	201	송종기	총무부		부사장	57	72000000
--3	204	유재식	해외영업2부	부장	54	48960000
SELECT ROWNUM, EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME, "나이" , "연봉"
FROM (SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME, (119 - SUBSTR(EMP_NO, 1, 2)) + 1 "나이", SALARY * (1 + NVL(BONUS,0)) * 12 "연봉"
        FROM EMPLOYEE
        LEFT JOIN DEPARTMENT ON (DEPT_ID = DEPT_CODE)
        JOIN JOB USING(JOB_CODE)
        WHERE SUBSTR(EMP_NO, 1, 1) = '6'
        ORDER BY 6 DESC)
WHERE ROWNUM <= 3;

-- 7. 한국에서 일하며 사는 40대 남성의 이름 전화번호 이메일과 함께 출력한다. (김형준)

--전지연	01033624442	jun_jy@kh.or.kr	한국
--차태연	01064643212	cha_ty@kh.or.kr	한국
--이중석		lee_js@kh.or.kr	한국
--임시환		im_sw@kh.or.kr	한국
--송종기	01045686656	song_jk@kh.or.kr	한국
--선동일	01099546325	sun_di@kh.or.kr	한국 
SELECT EMP_NAME, PHONE, EMAIL
FROM EMPLOYEE
WHERE EMP_NAME (SELECT EMP_NAME
                FROM EMPLOYEE
                WHERE SUBSTR(EMP_NO, 1, 2) IN (EXTRACT(YEAR FROM DATE(SYSDATE))) - 40 AND (EXTRACT(YEAR FROM DATE(SYSDATE)) - 30);


-- 8. 매니저가 아닌 사람들중 월급이 가장많은 사람의 같은 지역 사람들의
-- 이름 부서명 직급명 월급 조회 (신승환)

<결과>
이름	부서명		직급명	월급
유재식	해외영업2부	부장	3400000
정중하	해외영업2부	부장	3900000
송은희	해외영업2부	차장 	2800000

-- 9. 각 근무지역의 월급이 제일 높은 사람의 이름과 월급을 출력하시오 (이욱재)

-- 10. 부서별 가장  평균 연봉이 높은 다섯 부서의
-- 부서코드 , 부서이름 , 평균 연봉, 구성원수 , 부서의 평균나이 (소수점 두자리에서 반올림) , 해당 부서의 위치가있는 나라 를 조회하여라
SELECT 부서코드 ,부서이름, 평균연봉 , 구성원수 , 평균나이 , 국가명 (이진혁)


-- 11. 부서별 평균 급여 순위가 1위에서 3위까지에 해당하는 부서의 이름, 부서 평균급여, 순위 출력
-- 급여는 10만원 단위로 계산 (임세웅)
SELECT DEPT_TITLE, TRUNC("부서 평균급여", -5) "부서 평균급여", ROWNUM "부서 급여순위"
      FROM  (SELECT DEPT_TITLE, DEPT_CODE, AVG(SALARY) "부서 평균급여"
               FROM EMPLOYEE 
               JOIN DEPARTMENT ON(DEPT_ID = DEPT_CODE)
               GROUP BY DEPT_TITLE, DEPT_CODE
               ORDER BY 2 DESC)
WHERE ROWNUM <= 3;

-- 12. 70년대생 남직원들 사번, 이름, 부서명, 직급명, 입사일, 보너스 포함 연봉과 근무 지역을 
-- 표시하고 보너스 포함 연봉에 따라 순서대로 정렬하시오. (조수정)

-- 13. 선동일이 관리하는 직원의 사번 이름 부서명 직급명 입사일을 구하고 그들 중 연봉(보너스 포함)이 높은
-- 순서로 정렬하시오 (오재원)


-- 14. '장쯔위' 보다 입사일이 빠른 사람중에, 나이가 더 어린 사람들의 월급 순위를 매기시오
-- 순위, 사번, 이름, 부서명, 직급명, 입사일, 관리자 이름(없으면 '없음') (옥종광)
----------------- 출력 결과 --------------------
1	202	노옹철	3700000	총무부		부사장	01/01/01	201
2	208	김해술	2500000	해외영업1부	과장	04/04/30	207
3	221	유하진	2480000	회계관리부	차장	94/01/20	없음
4	211	전형돈	2000000	기술지원부	대리	12/12/12	200
5	214	방명수	1380000	인사관리부	사원	10/04/04	200

-- 15 직원 테이블에서 입사일이 빠른 순서대로 
-- 사번, 이름, 부서명, 직급명, 입사일, 지역명, 입사일순위(출력헤더: 순위), 퇴사여부을 조회하세요 -> 인라인뷰 사용
-- 단, 퇴사한 사람은 제외하고 동일한 순위 이후의 등수를 동일한 인원 수만큼 건너 뛰고 순위 계산 (이지은)

-- 16. 2014년도에 입사한 사람과 같은 직업 코드를 가지고 있는 평균 연봉과 보너스 를 구해라 단 보너스가 없는 사람은 보너스 없음을 만든다
-- 이름 , --직업 코드 , 직업 코드 , 직위 , 연봉 ,보너스 (연봉 별로 순위) , 한국 에서 근무하는 사람을 구하시오 (강민수)

-- 17. 아시아에서 근무하는 부서별 평균연봉 순위
-- 부서명, 근무지역, 평균연봉, 순위(이태균)

-- 18. 각 부서별 모든 인원의 월급순위 총 23개행의 결과(신하은) 


